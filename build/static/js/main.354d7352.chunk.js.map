{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","Navbar","className","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","Column","Table","Home","handleUpload","fileList","formData","FormData","forEach","file","append","uploading","axios","post","headers","then","res","isNullOrUndefined","data","deals","getMostSoldVehicles","errors","message","success","catch","err","console","log","error","priceformat","num","toFixed","replace","getDeals","get","vehicles","onRemove","index","indexOf","newFileList","slice","splice","beforeUpload","style","marginBottom","span","length","map","value","idx","key","type","marginRight","title","icon","UploadOutlined","disabled","loading","marginTop","bordered","dataSource","size","rowKey","dataIndex","render","price","date","moment","format","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","basename","URL","process","origin","addEventListener","fetch","response","status","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.354d7352.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">Deal Data Upload</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                \r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { isNullOrUndefined } from 'util';\r\nimport axios from 'axios'; \r\nimport moment from 'moment'\r\nimport 'antd/dist/antd.css';\r\nimport { Upload, Button, message, Table, Row, Col, Card, Alert } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nconst { Column } = Table;\r\nexport class Home extends Component {\r\n \r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { fileList: [],\r\n      uploading: false,\r\n        deals: [],\r\n       vehicles:[],\r\n      errors: []};\r\n    \r\n  }\r\n\r\n    componentDidMount() {\r\n\r\n    this.getDeals();\r\n  }\r\n  \r\n  handleUpload = () => {\r\n    const { fileList } = this.state;\r\n    const formData = new FormData();\r\n    fileList.forEach(file => {\r\n      formData.append('files', file);\r\n    });\r\n\r\n    this.setState({\r\n      uploading: true,\r\n    });\r\n    this.setState({\r\n      uploading: true,\r\n    });\r\n\r\n      const config = {\r\n          headers: {\r\n              'content-type': 'multipart/form-data',\r\n          },\r\n      };\r\n\r\n      //formData.append('name', this.state.currentFile.name);\r\n\r\n      axios.post(\"/api/Deal\", formData, config)\r\n          .then((res) => {\r\n              this.setState({\r\n                  fileList: [],\r\n                  uploading: false,\r\n              });\r\n              \r\n             \r\n\r\n              if(!isNullOrUndefined(res.data.deals) )\r\n              this.setState({ deals: res.data.deals});  \r\n              this.getMostSoldVehicles();\r\n              if (!isNullOrUndefined(res.data.errors)) {\r\n                  this.setState({ errors: res.data.errors });\r\n              }\r\n              else {\r\n                  message.success('upload successfully.');\r\n              }\r\n          })\r\n          .catch(err => {\r\n              console.log(err);\r\n              this.setState({\r\n                  uploading: false,\r\n              });\r\n              message.error('upload failed.');\r\n          });\r\n    \r\n\r\n    \r\n  };\r\n\r\n    priceformat = (num) => {\r\n    if (!num) { num = 0 };\r\n    return 'CAD$' + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n\r\n}\r\ngetDeals = () => {\r\n  \r\n    axios.get(\"/api/Deal/GetAllVehicles\")           \r\n      .then(res => {\r\n          const deals = res.data;\r\n          this.setState({ deals });\r\n          \r\n          this.getMostSoldVehicles();\r\n      })\r\n      \r\n      .catch(err => console.log(err));\r\n}\r\n getMostSoldVehicles = () => {\r\n     axios.get(\"/api/Deal/GetMostPopularVehicle\")\r\n            .then(res => {\r\n                const vehicles = res.data;\r\n                this.setState({ vehicles });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n  render() {\r\n    const { uploading, fileList } = this.state;\r\n    const props = {\r\n      onRemove: file => {\r\n        this.setState(state => {\r\n          const index = state.fileList.indexOf(file);\r\n          const newFileList = state.fileList.slice();\r\n          newFileList.splice(index, 1);\r\n          return {\r\n            fileList: newFileList,\r\n          };\r\n        });\r\n      },\r\n      beforeUpload: file => {\r\n        this.setState(state => ({\r\n          fileList: [...state.fileList, file],\r\n        }));\r\n        return false;\r\n      },\r\n      fileList,\r\n    };\r\n\r\n    return (\r\n      <div>\r\n         <Row style={{ marginBottom: 16 }}>\r\n         <Col span={24} >\r\n    {this.state.errors && this.state.errors.length > 0 ? this.state.errors.map((value, idx) =>  <><Alert message={value.message} key={idx} type=\"error\"/><br/></>)\r\n                           : <span></span>}\r\n                           </Col>\r\n                           </Row>\r\n            <Row style={{ marginBottom: 16 }}>\r\n                <Col span={10} style= {{marginRight:5}}>\r\n                    <Card title=\"Deal data upload\">\r\n                        <Upload {...props}>\r\n                            <Button icon={<UploadOutlined />}>Select File</Button>\r\n                        </Upload>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.handleUpload}\r\n                            disabled={fileList.length === 0}\r\n                            loading={uploading}\r\n                            style={{ marginTop: 16 }}\r\n                        >\r\n                            {uploading ? 'Uploading' : 'Start Upload'}\r\n                        </Button>\r\n                    </Card>\r\n                </Col>\r\n               \r\n                <Col span={12}>\r\n                    <Card title=\"Most often sold vehicles\">\r\n                        {\r\n                           this.state.vehicles.length > 0 ? this.state.vehicles.map((value, idx) => <p key={idx}>{value}</p>)\r\n                           : <div>No data yet</div>\r\n                         }\r\n                        </Card>\r\n                    </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Card title=\"Deals\">\r\n                        {this.state.deals.length > 0 ?\r\n                            <Table\r\n                                bordered\r\n                                dataSource={this.state.deals}\r\n                                size=\"small\"\r\n                                rowKey=\"dealNumber\">\r\n                                <Column\r\n                                    title=\"Deal Number\"\r\n                                    dataIndex=\"dealNumber\"\r\n                                    key=\"dealNumber\"\r\n                                />\r\n                                <Column\r\n                                    title=\"Customer Name\"\r\n                                    dataIndex=\"customerName\"\r\n                                    key=\"customerName\"\r\n\r\n                                />\r\n                                <Column\r\n                                    title=\"Dealership Name\"\r\n                                    dataIndex=\"dealershipName\"\r\n                                    key=\"dealershipName\"\r\n                                />\r\n                                <Column\r\n                                    title=\"Vehicle\"\r\n                                    dataIndex=\"vehicle\"\r\n                                    key=\"vehicle\"\r\n                                />\r\n                                <Column\r\n                                    title=\"Price\"\r\n                                    dataIndex=\"price\"\r\n                                    key=\"price\"\r\n                                    render={price => <span>{price ? this.priceformat(price) : 0.0}</span>}\r\n                                />\r\n                                <Column\r\n                                    title=\"Date\"\r\n                                    dataIndex=\"date\"\r\n                                    key=\"date\"\r\n                                    render={date => <span>{date ? moment(date).format(\"MM/DD/YYYY\") : \"\"}</span>}\r\n                                />\r\n                            </Table> : \"No deals yet\"}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\n\r\n\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n        \r\n       \r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}